@model DataMapping.Entities.UserProfile
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}

@section MainHeader{

    @Html.Partial("PartialViews/PartialAdminHeader")
}

@section Container{


    <h1>Update Profile</h1>

    <br /><br />
    <div class="col-lg-10 col-lg-offset-1">

        @using (Html.BeginForm("EditProfile", "Profile", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.UserId)
            <form>

                <div class="row">

                    <iframe src='@Url.Action("UploadDocument", "ImageUpload")' style="width: 300px;
                        height: 180px;
                         padding: 5px;
                        border-radius: 5px;
                        border-left:0px;
                        border-top:0px;
                        background-color: #fff;
                        -webkit-box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.14);
                        -moz-box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.14);
                        -o-box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.14);
                        box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.14);
                        margin:0px auto;
                        "></iframe>

                    <br /><br />

                </div>

                <table class="profile_edit_table">

                    <tr>
                        <td class="text-left" colspan="2">
                            @Html.LabelFor(model => model.FirstName, new { @class = "label-Name" }):
                        </td>
                        <td class="text-right" colspan="7">
                            @Html.TextBoxFor(model => model.FirstName, new { id = "form_name", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FirstName)
                        </td>
                    </tr>

                    <tr>
                        <td class="text-left" colspan="2">
                            @Html.LabelFor(model => model.LastName, new { @class = "label-Name" }):
                        </td>
                        <td class="text-right" colspan="7">
                            @Html.TextBoxFor(model => model.LastName, new { id = "form_name", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LastName)
                        </td>
                    </tr>


                    <tr>
                        <td class="text-left" colspan="2">
                            @Html.LabelFor(model => model.Address):
                        </td>
                        <td class="text-right" colspan="7">
                            @Html.TextBoxFor(model => model.Address, new { id = "form_address", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Address)
                        </td>
                    </tr>

                    <tr>
                        <td class="text-left" colspan="2">
                            @Html.LabelFor(model => model.Phone1):
                        </td>
                        <td class="text-right" colspan="7">
                            @Html.TextBoxFor(model => model.Phone1, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Phone1)
                        </td>
                    </tr>

                    <tr>
                        <td class="text-left" colspan="2">
                            @Html.LabelFor(model => model.Phone2)
                        </td>
                        <td class="text-right" colspan="7">
                            @Html.TextBoxFor(model => model.Phone2, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Phone2)
                        </td>
                    </tr>

                    <tr>
                        <td colspan="3">
                           <label> Birth Date :</label>
                        </td>
                        <td colspan="1" class="text-right">
                            @Html.LabelFor(model => model.BirthDate.Year)
                        </td>
                        <td colspan="1">
                            @Html.DropDownList("year", new SelectList(Enumerable.Range(1950, 81), Model.BirthDate.Year), new { @Value = Model.BirthDate.Year, @id = "YearList", @class = "form-year" })&nbsp;&nbsp;
                        </td>
                    
                        <td colspan="1" class="text-right">
                            @Html.LabelFor(model => model.BirthDate.Month)
                        </td>
                        <td colspan="1">
                            @Html.DropDownList("month", new SelectList(Enumerable.Range(1, 12), Model.BirthDate.Month), new { @Value = Model.BirthDate.Month, @id = "MonthList", @class = "form-Month" })&nbsp;&nbsp;
                        </td>
                    
                        <td colspan="1" class="text-right">
                            @Html.LabelFor(model => model.BirthDate.Day)
                        </td>
                        <td colspan="1">
                            @Html.DropDownList("day", new SelectList(Enumerable.Range(1, DateTime.DaysInMonth(Model.BirthDate.Year, Model.BirthDate.Month)), Model.BirthDate.Day), new { @value = Model.BirthDate.Day, @id = "DayList", @name = "days", @class = "form-day" })
                        </td>

                    </tr>
                    <tr>
                        <td class="text-center" colspan="9">
                            <input type="submit" class="btn btn-success btn-update" value="Save">
                        </td>
                    </tr>
                </table>
            </form>


        }

    </div>

    <br />

}

@section MainFooter{

    @Html.Partial("PartialViews/PartialAdminFooter")
}
@section JavaScriptSection{

    <script type="text/javascript">

        jQuery(function () {
            jQuery("#MonthList").change(function () { GetMonthDays(); });
            jQuery("#YearList").change(function () { GetMonthDays(); });
        });


        function GetMonthDays() {
            var month = jQuery("#MonthList").val();
            var year = jQuery("#YearList").val();
            var daysNumber = new Date(year, month, 0).getDate();
            jQuery.get("/Date/DaysList" + "?days=" + daysNumber, function (data) {
                jQuery("#DayList").html(data);
            });


        }
    </script>
}
